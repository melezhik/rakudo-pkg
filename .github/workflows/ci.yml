name: ci
on: [push, pull_request]
jobs:
  get-sources:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download nfpm, MoarVM, nqp, Rakudo and zef
        run: ./actions/download.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: sources
          path: |
            actions/*
            include/*
            config/*
            *.tar.gz
  build-and-package:
    needs: get-sources
    env:
      INSTALL_ROOT: /opt/rakudo-pkg
      CONFIG_SHELL: /bin/bash
      DEBIAN_FRONTEND: noninteractive
    strategy:
      matrix:
        image: [
          # BROKEN MoarVM builds: fedora:rawhide, alpine:edge
          # https://github.com/MoarVM/MoarVM/issues/1424
          # https://github.com/MoarVM/MoarVM/issues/1424
          # 
          # BROKEN nfpm build: alpine:3.13
          # https://github.com/goreleaser/nfpm/issues/288
          "alpine:3.10", "alpine:3.11", "alpine:3.12",
          "centos:7", "centos:8",
          "registry.access.redhat.com/ubi7-minimal",
          "registry.access.redhat.com/ubi8-minimal",
          "debian:9-slim", "debian:10-slim", "debian:testing-slim",
          "debian:unstable-slim", "debian:experimental", 
          "fedora:32", "fedora:33",
          "opensuse/leap:15.2", "opensuse/tumbleweed",
          "ubuntu:16.04", "ubuntu:18.04", "ubuntu:20.04",
          "ubuntu:20.10", "ubuntu:devel",
        ]
    runs-on: ubuntu-latest
    container: ${{ matrix.image }}
    steps:
      - name: Download checkout
        uses: actions/download-artifact@v2
        with:
          name: sources
      - name: Create build environment 
        env:
          IMAGE: ${{ matrix.image }}
        run: |
          chmod +x actions/*
          ./actions/setup_env.sh
      - name: Build
        run: |
          ./actions/build.sh
      - name: Package
        run: |
          ./actions/package.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: packages
          path: ${{ github.workspace }}/packages/
  # Forks don't need upload the packages, just have the artifacts available
  upload:
    if: github.repository_owner == 'nxadm'
    needs: build-and-package
    runs-on: ubuntu-latest
    steps:
      - name: Download packages
        uses: actions/download-artifact@v2
        with:
          name: packages
      - name: TEST
        run: |
          echo "Chekcing workspace"
          ls -la $GITHUB_WORKSPACE
